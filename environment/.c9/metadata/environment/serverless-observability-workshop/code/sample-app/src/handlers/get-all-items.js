{"filter":false,"title":"get-all-items.js","tooltip":"/serverless-observability-workshop/code/sample-app/src/handlers/get-all-items.js","undoManager":{"mark":25,"position":25,"stack":[[{"start":{"row":0,"column":0},"end":{"row":1,"column":51},"action":"remove","lines":["const AWS = require('aws-sdk')","const docClient = new AWS.DynamoDB.DocumentClient()"],"id":2},{"start":{"row":0,"column":0},"end":{"row":5,"column":22},"action":"insert","lines":["const AWS = require('aws-sdk')","const docClient = new AWS.DynamoDB.DocumentClient()","const { Unit } = require(\"aws-embedded-metrics\");","const { logMetricEMF } = require('../lib/logging/logger')","","let _cold_start = true"]}],[{"start":{"row":7,"column":0},"end":{"row":32,"column":1},"action":"remove","lines":["exports.getAllItemsHandler = async (event, context) => {","    let response","    try {","        if (event.httpMethod !== 'GET') {","            throw new Error(`getAllItems only accept GET method, you tried: ${event.httpMethod}`)","        }","","        const items = await getAllItems()","        response = {","            statusCode: 200,","            headers: {","                'Access-Control-Allow-Origin': '*'","            },","            body: JSON.stringify(items)","        }","    } catch (err) {","        response = {","            statusCode: 500,","            headers: {","                'Access-Control-Allow-Origin': '*'","            },","            body: JSON.stringify(err)","        }","    }","    return response","}"],"id":3},{"start":{"row":7,"column":0},"end":{"row":44,"column":0},"action":"insert","lines":["exports.getAllItemsHandler = async (event, context) => {","    let response","    try {","        if (_cold_start) {","            //Metrics","            await logMetricEMF(name = 'ColdStart', unit = Unit.Count, value = 1, { service: 'item_service', function_name: context.functionName })","            _cold_start = false","        }","        if (event.httpMethod !== 'GET') {","            await logMetricEMF(name = 'UnsupportedHTTPMethod', unit = Unit.Count, value = 1, { service: 'item_service', operation: 'get-all-items' })","            throw new Error(`getAllItems only accept GET method, you tried: ${event.httpMethod}`)","        }","","        const items = await getAllItems()","        response = {","            statusCode: 200,","            headers: {","                'Access-Control-Allow-Origin': '*'","            },","            body: JSON.stringify(items)","        }","        //Metrics","        await logMetricEMF(name = 'SuccessfulGetAllItems', unit = Unit.Count, value = 1, { service: 'item_service', operation: 'get-all-items' })","    } catch (err) {","        response = {","            statusCode: 500,","            headers: {","                'Access-Control-Allow-Origin': '*'","            },","            body: JSON.stringify(err)","        }","        //Metrics","        await logMetricEMF(name = 'FailedGetAllItems', unit = Unit.Count, value = 1, { service: 'item_service', operation: 'get-all-items' })","    }","        ","    return response","}",""]}],[{"start":{"row":3,"column":57},"end":{"row":4,"column":0},"action":"insert","lines":["",""],"id":4}],[{"start":{"row":4,"column":0},"end":{"row":5,"column":7},"action":"insert","lines":["const { logger_setup } = require('../lib/logging/logger')","let log"],"id":5}],[{"start":{"row":5,"column":7},"end":{"row":6,"column":0},"action":"insert","lines":["",""],"id":6}],[{"start":{"row":11,"column":0},"end":{"row":12,"column":0},"action":"remove","lines":["    let response",""],"id":7},{"start":{"row":11,"column":0},"end":{"row":15,"column":19},"action":"insert","lines":["log = logger_setup()","  let response","","  log.info(event)","  log.info(context)"]}],[{"start":{"row":15,"column":19},"end":{"row":15,"column":23},"action":"remove","lines":["    "],"id":8},{"start":{"row":15,"column":19},"end":{"row":16,"column":0},"action":"insert","lines":["",""]},{"start":{"row":16,"column":0},"end":{"row":16,"column":2},"action":"insert","lines":["  "]}],[{"start":{"row":11,"column":0},"end":{"row":11,"column":4},"action":"insert","lines":["    "],"id":9}],[{"start":{"row":11,"column":0},"end":{"row":11,"column":4},"action":"remove","lines":["    "],"id":10}],[{"start":{"row":11,"column":0},"end":{"row":11,"column":1},"action":"insert","lines":[" "],"id":11},{"start":{"row":11,"column":1},"end":{"row":11,"column":2},"action":"insert","lines":[" "]}],[{"start":{"row":4,"column":57},"end":{"row":5,"column":0},"action":"insert","lines":["",""],"id":12},{"start":{"row":5,"column":0},"end":{"row":6,"column":0},"action":"insert","lines":["",""]}],[{"start":{"row":8,"column":0},"end":{"row":9,"column":0},"action":"remove","lines":["",""],"id":13},{"start":{"row":7,"column":7},"end":{"row":8,"column":0},"action":"remove","lines":["",""]}],[{"start":{"row":15,"column":19},"end":{"row":16,"column":0},"action":"insert","lines":["",""],"id":14},{"start":{"row":16,"column":0},"end":{"row":16,"column":2},"action":"insert","lines":["  "]},{"start":{"row":16,"column":2},"end":{"row":17,"column":0},"action":"insert","lines":["",""]},{"start":{"row":17,"column":0},"end":{"row":17,"column":2},"action":"insert","lines":["  "]}],[{"start":{"row":24,"column":41},"end":{"row":25,"column":0},"action":"insert","lines":["",""],"id":15},{"start":{"row":25,"column":0},"end":{"row":25,"column":12},"action":"insert","lines":["            "]}],[{"start":{"row":25,"column":12},"end":{"row":27,"column":89},"action":"insert","lines":[" // Logging","    log.error({ \"operation\": \"get-all-items\", 'method': 'getAllItemsHandler', \"details\": `getAllItems only accept GET method, you tried: ${event.httpMethod}` })","    throw new Error(`getAllItems only accept GET method, you tried: ${event.httpMethod}`)"],"id":16}],[{"start":{"row":26,"column":4},"end":{"row":26,"column":8},"action":"insert","lines":["    "],"id":17}],[{"start":{"row":26,"column":8},"end":{"row":26,"column":12},"action":"insert","lines":["    "],"id":18}],[{"start":{"row":27,"column":4},"end":{"row":27,"column":8},"action":"insert","lines":["    "],"id":19}],[{"start":{"row":27,"column":8},"end":{"row":27,"column":12},"action":"insert","lines":["    "],"id":20}],[{"start":{"row":28,"column":12},"end":{"row":28,"column":13},"action":"insert","lines":["/"],"id":21},{"start":{"row":28,"column":13},"end":{"row":28,"column":14},"action":"insert","lines":["/"]}],[{"start":{"row":29,"column":12},"end":{"row":29,"column":13},"action":"insert","lines":["/"],"id":22},{"start":{"row":29,"column":13},"end":{"row":29,"column":14},"action":"insert","lines":["/"]}],[{"start":{"row":42,"column":19},"end":{"row":43,"column":0},"action":"insert","lines":["",""],"id":23},{"start":{"row":43,"column":0},"end":{"row":43,"column":8},"action":"insert","lines":["        "]}],[{"start":{"row":43,"column":8},"end":{"row":44,"column":99},"action":"insert","lines":["  // Logging","        log.error({ \"operation\": \"get-all-items\", 'method': 'getAllItemsHandler', \"details\": err })"],"id":24}],[{"start":{"row":44,"column":99},"end":{"row":45,"column":0},"action":"insert","lines":["",""],"id":25},{"start":{"row":45,"column":0},"end":{"row":45,"column":8},"action":"insert","lines":["        "]}],[{"start":{"row":43,"column":0},"end":{"row":43,"column":4},"action":"remove","lines":["    "],"id":26}],[{"start":{"row":43,"column":0},"end":{"row":43,"column":1},"action":"insert","lines":[" "],"id":27},{"start":{"row":43,"column":1},"end":{"row":43,"column":2},"action":"insert","lines":[" "]}]]},"ace":{"folds":[],"scrolltop":0,"scrollleft":0,"selection":{"start":{"row":56,"column":8},"end":{"row":56,"column":8},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":0},"timestamp":1647433937029,"hash":"4c06cf9fdc1684dd2c8b43766d8e0a6eeee89462"}