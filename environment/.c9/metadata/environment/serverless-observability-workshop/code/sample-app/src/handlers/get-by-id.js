{"filter":false,"title":"get-by-id.js","tooltip":"/serverless-observability-workshop/code/sample-app/src/handlers/get-by-id.js","undoManager":{"mark":1,"position":1,"stack":[[{"start":{"row":0,"column":0},"end":{"row":1,"column":51},"action":"remove","lines":["const AWS = require('aws-sdk')","const docClient = new AWS.DynamoDB.DocumentClient()"],"id":2},{"start":{"row":0,"column":0},"end":{"row":7,"column":0},"action":"insert","lines":["","const AWS = require('aws-sdk')","const docClient = new AWS.DynamoDB.DocumentClient()","const { Unit } = require(\"aws-embedded-metrics\");","const { logMetricEMF } = require('../lib/logging/logger')","","let _cold_start = true",""]}],[{"start":{"row":9,"column":0},"end":{"row":37,"column":0},"action":"remove","lines":["exports.getByIdHandler = async (event, context) => {","  let response, id","  try {","    if (event.httpMethod !== 'GET') {","      throw new Error(`getById only accept GET method, you tried: ${event.httpMethod}`)","    }","","    id = event.pathParameters.id","    const item = await getItemById(id)","","    response = {","      statusCode: 200,","      headers: {","        'Access-Control-Allow-Origin': '*'","      },","      body: JSON.stringify(item)","    }","  } catch (err) {","    response = {","      statusCode: 500,","      headers: {","        'Access-Control-Allow-Origin': '*'","      },","      body: JSON.stringify(err)","    }","  }","  return response","}",""],"id":3},{"start":{"row":9,"column":0},"end":{"row":47,"column":0},"action":"insert","lines":["exports.getByIdHandler = async (event, context) => {","    let response, id","    try {","        if (_cold_start) {","            //Metrics","            await logMetricEMF(name = 'ColdStart', unit = Unit.Count, value = 1, { service: 'item_service', function_name: context.functionName })","            _cold_start = false","        }","        if (event.httpMethod !== 'GET') {","            await logMetricEMF(name = 'UnsupportedHTTPMethod', unit = Unit.Count, value = 1, { service: 'item_service', operation: 'get-by-id' })","            throw new Error(`getById only accept GET method, you tried: ${event.httpMethod}`)","        }","","        id = event.pathParameters.id","        const item = await getItemById(id)","        response = {","            statusCode: 200,","            headers: {","                'Access-Control-Allow-Origin': '*'","            },","            body: JSON.stringify(item)","        }","        //Metrics","        await logMetricEMF(name = 'SuccessfulGetItem', unit = Unit.Count, value = 1, { service: 'item_service', operation: 'get-by-id' })","    } catch (err) {","        response = {","            statusCode: 500,","            headers: {","                'Access-Control-Allow-Origin': '*'","            },","            body: JSON.stringify(err)","        }","        //Metrics","        await logMetricEMF(name = 'FailedGetItem', unit = Unit.Count, value = 1, { service: 'item_service', operation: 'get-by-id' })","    }","        ","    return response","}",""]}]]},"ace":{"folds":[],"scrolltop":1,"scrollleft":0,"selection":{"start":{"row":9,"column":52},"end":{"row":9,"column":52},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":{"row":3,"state":"start","mode":"ace/mode/javascript"}},"timestamp":1647426517605,"hash":"3a181871b42361df6f9d6acec0c383f61e68eaac"}